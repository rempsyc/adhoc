[{"path":"https://rempsyc.github.io/adhoc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 adhoc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rempsyc.github.io/adhoc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rémi Thériault. Author, maintainer.","code":""},{"path":"https://rempsyc.github.io/adhoc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thériault R (2025). adhoc: Ad hoc functions help friends. R package version 0.0.0.9001, https://rempsyc.github.io/adhoc/.","code":"@Manual{,   title = {adhoc: Ad hoc functions to help friends},   author = {Rémi Thériault},   year = {2025},   note = {R package version 0.0.0.9001},   url = {https://rempsyc.github.io/adhoc/}, }"},{"path":"https://rempsyc.github.io/adhoc/index.html","id":"adhoc","dir":"","previous_headings":"","what":"Ad hoc functions to help friends","title":"Ad hoc functions to help friends","text":"adhoc functions help friends","code":""},{"path":"https://rempsyc.github.io/adhoc/reference/xlm_profiles_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Read legacy profile XML into a data frame — xlm_profiles_to_df","title":"Read legacy profile XML into a data frame — xlm_profiles_to_df","text":"Parses legacy XML dump records stored <ROW> nodes. function reads raw bytes, drops NULs, interprets Latin-1/Windows-1252, converts UTF-8, fixes/sets XML declaration, extracts <ROW> row. Columns union child element names across rows; missing fields filled NA.","code":""},{"path":"https://rempsyc.github.io/adhoc/reference/xlm_profiles_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read legacy profile XML into a data frame — xlm_profiles_to_df","text":"","code":"xlm_profiles_to_df(path)"},{"path":"https://rempsyc.github.io/adhoc/reference/xlm_profiles_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read legacy profile XML into a data frame — xlm_profiles_to_df","text":"path Character scalar. Path XML file.","code":""},{"path":"https://rempsyc.github.io/adhoc/reference/xlm_profiles_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read legacy profile XML into a data frame — xlm_profiles_to_df","text":"base data.frame one row per <ROW> character columns child element name found file.","code":""},{"path":"https://rempsyc.github.io/adhoc/reference/xlm_profiles_to_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read legacy profile XML into a data frame — xlm_profiles_to_df","text":"helper designed messy, non-UTF-8 dumps (e.g., Windows-1252) may contain NUL bytes. performs minimal normalization coerce types; parse dates numerics downstream needed.","code":""},{"path":[]},{"path":"https://rempsyc.github.io/adhoc/reference/xlm_profiles_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read legacy profile XML into a data frame — xlm_profiles_to_df","text":"","code":"# \\donttest{ xml_txt <- paste0(   '<?xml version=\"1.0\"?>',   '<ROWSET>',   '  <ROW><ID>1<\/ID><PROFILE_TYPE>buyer<\/PROFILE_TYPE><\/ROW>',   '  <ROW><ID>2<\/ID><PROFILE_TYPE>seller<\/PROFILE_TYPE><CITY>Panamá<\/CITY><\/ROW>',   '<\/ROWSET>' ) f <- tempfile(fileext = \".xml\"); writeLines(xml_txt, f) xlm_profiles_to_df(f) #>   ID PROFILE_TYPE   CITY #> 1  1        buyer   <NA> #> 2  2       seller Panamá unlink(f) # }"}]

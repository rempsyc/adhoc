% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xlm_profiles_to_df.R
\name{xlm_profiles_to_df}
\alias{xlm_profiles_to_df}
\title{Read legacy profile XML into a data frame}
\usage{
xlm_profiles_to_df(path)
}
\arguments{
\item{path}{Character scalar. Path to the XML file.}
}
\value{
A base \code{data.frame} with one row per \verb{<ROW>} and character columns for each
child element name found in the file.
}
\description{
Parses a legacy XML dump where records are stored under \verb{<ROW>} nodes. The
function reads raw bytes, drops NULs, interprets as Latin-1/Windows-1252,
converts to UTF-8, fixes/sets the XML declaration, and extracts each \verb{<ROW>}
as a row. Columns are the union of child element names across rows; missing
fields are filled with \code{NA}.
}
\details{
This helper is designed for messy, non-UTF-8 dumps (e.g., Windows-1252) that
may contain NUL bytes. It performs minimal normalization and does \strong{not}
coerce types; parse dates or numerics downstream as needed.
}
\examples{
\donttest{
xml_txt <- paste0(
  '<?xml version="1.0"?>',
  '<ROWSET>',
  '  <ROW><ID>1</ID><PROFILE_TYPE>buyer</PROFILE_TYPE></ROW>',
  '  <ROW><ID>2</ID><PROFILE_TYPE>seller</PROFILE_TYPE><CITY>Panam√°</CITY></ROW>',
  '</ROWSET>'
)
f <- tempfile(fileext = ".xml"); writeLines(xml_txt, f)
xlm_profiles_to_df(f)
unlink(f)
}

}
\seealso{
\code{\link[xml2:read_xml]{xml2::read_xml()}}, \code{\link[xml2:xml_find_all]{xml2::xml_find_all()}}
}
